{"version":3,"sources":["AnimatedTabBarItem.tsx"],"names":["AnimatedRawButton","Animated","createAnimatedComponent","TouchableWithoutFeedback","shouldCancelWhenOutside","shouldActivateOnStart","add","interpolate","useCode","set","cond","eq","AnimatedTabBarItemComponent","props","index","selectedIndex","allowFontScaling","label","icon","background","labelStyleOverride","labelStyle","duration","easing","Easing","out","exp","labelWidth","minwidth","maxWidth","animatedFocus","state","gestureHandler","State","END","UNDETERMINED","animatedIconColor","inputRange","outputRange","inactiveColor","activeColor","containerStyle","styles","container","width","contentContainerStyle","contentContainer","backgroundColor","labelContainerStyle","labelContainer","opacity","right","handleTextlayout","nativeEvent","layout","requestAnimationFrame","setValue","renderIcon","component","color","iconContainer","AnimatedTabBarItem"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View } from 'react-native';\nimport Animated, { Easing } from 'react-native-reanimated';\nimport {\n  TouchableWithoutFeedback,\n  State,\n  createNativeWrapper,\n} from 'react-native-gesture-handler';\nimport {\n  interpolateColor,\n  useValues,\n  withTransition,\n  panGestureHandler,\n} from 'react-native-redash';\nimport { TabConfigsType, AnimationConfigProps } from '../types';\nimport { styles } from './styles';\n\nconst AnimatedRawButton = createNativeWrapper(\n  Animated.createAnimatedComponent(TouchableWithoutFeedback),\n  {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: false,\n  }\n);\n\nconst { add, interpolate, useCode, set, cond, eq } = Animated;\n\ninterface AnimatedTabBarItemProps extends AnimationConfigProps, TabConfigsType {\n  index: number;\n  selectedIndex: Animated.Value<number>;\n  label: string;\n  allowFontScaling?: boolean;\n}\n\nconst AnimatedTabBarItemComponent = (props: AnimatedTabBarItemProps) => {\n  // props\n  const {\n    index,\n    selectedIndex,\n    allowFontScaling,\n    label,\n    icon,\n    background,\n    labelStyle: labelStyleOverride,\n    duration = 500,\n    easing = Easing.out(Easing.exp),\n  } = props;\n\n  // variables\n  const [labelWidth] = useValues([0], []);\n  const minwidth = useMemo(() => 72, []);\n  const maxWidth = add(labelWidth, 12, minwidth);\n\n  // animations\n  const animatedFocus = withTransition(cond(eq(selectedIndex, index), 1, 0), {\n    duration,\n    easing,\n  });\n  const { state, gestureHandler } = panGestureHandler();\n\n  useCode(\n    () =>\n      cond(eq(state, State.END), [\n        set(selectedIndex, index),\n        set(state, State.UNDETERMINED),\n      ]),\n    [selectedIndex, state, index]\n  );\n\n  const animatedIconColor = interpolateColor(animatedFocus, {\n    inputRange: [0, 1],\n    outputRange: [icon.inactiveColor, icon.activeColor],\n  });\n\n  //#region styles\n  const containerStyle = [\n    styles.container,\n    {\n      width: interpolate(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [minwidth, maxWidth],\n      }),\n    },\n  ];\n  const contentContainerStyle = [\n    styles.contentContainer,\n    {\n      backgroundColor: interpolateColor(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [background.inactiveColor, background.activeColor],\n      }),\n    },\n  ];\n  const labelContainerStyle = [\n    styles.labelContainer,\n    {\n      opacity: interpolate(animatedFocus, {\n        inputRange: [0.33, 1],\n        outputRange: [0, 1],\n      }),\n      right: interpolate(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [0, 24],\n      }),\n    },\n  ];\n  const labelStyle = [styles.label, labelStyleOverride];\n  //#endregion\n\n  // callbacks\n  const handleTextlayout = ({\n    nativeEvent: {\n      // @ts-ignore\n      layout: { width },\n    },\n  }) => requestAnimationFrame(() => labelWidth.setValue(width));\n\n  // render\n  const renderIcon = () => {\n    return typeof icon.component === 'function'\n      ? icon.component({ color: animatedIconColor })\n      : icon.component;\n  };\n  return (\n    <AnimatedRawButton {...gestureHandler}>\n      <Animated.View style={containerStyle}>\n        <Animated.View style={contentContainerStyle}>\n          <View style={styles.iconContainer}>{renderIcon()}</View>\n        </Animated.View>\n        <Animated.View style={labelContainerStyle}>\n          <Animated.Text\n            onLayout={handleTextlayout}\n            style={labelStyle}\n            numberOfLines={1}\n            allowFontScaling={allowFontScaling}\n          >\n            {label}\n          </Animated.Text>\n        </Animated.View>\n      </Animated.View>\n    </AnimatedRawButton>\n  );\n};\n\nexport const AnimatedTabBarItem = memo(AnimatedTabBarItemComponent);\n"]}