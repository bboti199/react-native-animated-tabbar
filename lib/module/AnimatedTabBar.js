var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.AnimatedTabBar=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativeReanimated=_interopRequireWildcard(require("react-native-reanimated"));var _reactNativeRedash=require("react-native-redash");var _reactNativeSafeAreaContext=require("react-native-safe-area-context");var _native=require("@react-navigation/native");var _item=require("./item");var _jsxFileName="/home/boti/Devel/react-native-animated-tabbar/src/AnimatedTabBar.tsx";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}_reactNativeReanimated.default.addWhitelistedNativeProps({width:true,stroke:true,backgroundColor:true});var AnimatedTabBar=function AnimatedTabBar(props){var navigation=props.navigation,tabs=props.tabs,duration=props.duration,easing=props.easing;var isReactNavigation5=props.state?true:false;var _useMemo=(0,_react.useMemo)(function(){if(isReactNavigation5){return props.state;}else{return{index:props.navigation.state.index,routes:props.navigation.state.routes,ket:''};}},[props,isReactNavigation5]),routes=_useMemo.routes,navigationIndex=_useMemo.index,navigationKey=_useMemo.key;var safeArea=(0,_reactNativeSafeAreaContext.useSafeArea)();var _useValues=(0,_reactNativeRedash.useValues)([0],[]),_useValues2=(0,_slicedToArray2.default)(_useValues,1),selectedIndex=_useValues2[0];var containerStyle=(0,_react.useMemo)(function(){return[props.barStyle,{paddingBottom:safeArea.bottom}];},[safeArea,props.barStyle]);var getRouteLabel=function getRouteLabel(route){if(isReactNavigation5){var descriptors=props.descriptors;var options=descriptors[route.key].options;return options.title!==undefined?options.title:route.name;}else{return route.key;}};var getRouteTabConfigs=function getRouteTabConfigs(route){if(isReactNavigation5){return tabs[route.name];}else{return tabs[route.key];}};var handleSelectedIndexChange=function handleSelectedIndexChange(index){if(isReactNavigation5){var _routes$index=routes[index],key=_routes$index.key,name=_routes$index.name;var event=navigation.emit({type:'tabPress',target:key,canPreventDefault:true});if(!event.defaultPrevented){navigation.dispatch(_objectSpread({},_native.CommonActions.navigate(name),{target:navigationKey}));}}else{var onTabPress=props.onTabPress;onTabPress({route:routes[index]});}};(0,_react.useEffect)(function(){selectedIndex.setValue(navigationIndex);},[navigationIndex,selectedIndex]);(0,_reactNativeReanimated.useCode)(function(){return(0,_reactNativeReanimated.onChange)(selectedIndex,(0,_reactNativeReanimated.call)([selectedIndex],function(args){handleSelectedIndexChange(args[0]);}));},[selectedIndex]);return _react.default.createElement(_reactNative.View,{style:containerStyle,__source:{fileName:_jsxFileName,lineNumber:123,columnNumber:5}},routes.map(function(route,index){var configs=getRouteTabConfigs(route);var label=getRouteLabel(route);return _react.default.createElement(_item.AnimatedTabBarItem,(0,_extends2.default)({key:route.key,index:index,selectedIndex:selectedIndex,label:label,duration:duration,easing:easing},configs,{__source:{fileName:_jsxFileName,lineNumber:128,columnNumber:11}}));}));};exports.AnimatedTabBar=AnimatedTabBar;
//# sourceMappingURL=AnimatedTabBar.js.map